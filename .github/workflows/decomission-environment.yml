name: Decommission Environment

on:
  workflow_dispatch:
    inputs:
      company_name:
        description: "The name of the company or client to decommission (e.g., acme-corp)."
        required: true
      environment_name:
        description: "The name of the environment to decommission (e.g., production, staging)."
        required: true
      application_repo:
        description: "The full name of the application repository being decommissioned (e.g., your-org/cloudwatch-automatic-dashboard)."
        required: true
      aws_region:
        description: "AWS Region of the deployment."
        required: true
        default: "ap-southeast-1"

permissions:
  id-token: write
  contents: read

jobs:
  delete_application_stack:
    name: 1. Delete Application Stack
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}
    outputs:
      project_identifier: ${{ steps.load_config.outputs.project_identifier }}

    steps:
      - name: Mask Sensitive Inputs
        run: |
          echo "::add-mask::${{ github.event.inputs.company_name }}"
          echo "::add-mask::${{ github.event.inputs.environment_name }}"
          echo "::add-mask::${{ github.event.inputs.application_repo }}"

      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          allowed-endpoints: >
            github.com:443
            *.actions.githubusercontent.com:443
            sts.amazonaws.com:443
            sts.ap-southeast-1.amazonaws.com:443
            sts.us-east-1.amazonaws.com:443
            ssm.ap-southeast-1.amazonaws.com:443
            ssm.us-east-1.amazonaws.com:443
            cloudformation.ap-southeast-1.amazonaws.com:443
            cloudformation.us-east-1.amazonaws.com:443

      - name: Checkout Application Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.application_repo }}
          path: app

      - name: Validate config.json Exists
        run: |
          if [ ! -f "./app/config.json" ]; then
            echo "::error::config.json not found in the root of the application repository (${{ github.event.inputs.application_repo }}). Aborting."
            exit 1
          fi

      - name: Load Config and Mask Variables
        id: load_config
        working-directory: ./app
        run: |
          COMPOSITE_ENV_NAME="${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}"
          echo "::add-mask::$COMPOSITE_ENV_NAME"
          CONFIG_JSON=$(jq -r --arg TARGET_ENV "$COMPOSITE_ENV_NAME" '.[$TARGET_ENV]' config.json)
          STACK_NAME=$(echo "$CONFIG_JSON" | jq -r '.Name')
          SSM_PARAM_NAME=$(echo "$CONFIG_JSON" | jq -r '.ssm_parameter_for_role')
          PROJECT_ID=$(echo "$CONFIG_JSON" | jq -r '.project_identifier')
          echo "::add-mask::$STACK_NAME"
          echo "::add-mask::$SSM_PARAM_NAME"
          echo "::add-mask::$PROJECT_ID"
          echo "STACK_NAME=$STACK_NAME" >> $GITHUB_ENV
          echo "SSM_PARAM_NAME=$SSM_PARAM_NAME" >> $GITHUB_ENV
          echo "project_identifier=$PROJECT_ID" >> $GITHUB_OUTPUT

      - name: Validate Loaded Configuration
        run: |
          if [ -z "${{ env.STACK_NAME }}" ] || [ -z "${{ env.SSM_PARAM_NAME }}" ] || [ -z "${{ steps.load_config.outputs.project_identifier }}" ]; then
            echo "::error::Critical variables (STACK_NAME, SSM_PARAM_NAME, or project_identifier) could not be loaded from config.json. Aborting."
            exit 1
          fi

      - name: Configure AWS Credentials for Tooling Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TOOLING_ACCOUNT_OIDC_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Get Target Deployment Role ARN from SSM
        id: get_role
        run: |
          echo "Fetching target deployment role ARN..."
          TARGET_ROLE_ARN=$(aws ssm get-parameter --name "${{ env.SSM_PARAM_NAME }}" --with-decryption --query "Parameter.Value" --output text)
          echo "::add-mask::$TARGET_ROLE_ARN"
          echo "aws_role_to_assume=${TARGET_ROLE_ARN}" >> $GITHUB_ENV

      - name: Assume Final Deployment Role in Target Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.aws_role_to_assume }}
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Delete Application Stack
        run: |
          echo "Deleting application stack..."
          aws cloudformation delete-stack --stack-name ${{ env.STACK_NAME }}
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete --stack-name ${{ env.STACK_NAME }}

  delete_client_role_stack:
    name: 2. Delete Client Role Stack
    runs-on: ubuntu-latest
    needs: delete_application_stack
    environment:
      name: ${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}
    steps:
      - name: Mask Sensitive Inputs
        run: |
          echo "::add-mask::${{ github.event.inputs.company_name }}"
          echo "::add-mask::${{ github.event.inputs.environment_name }}"

      - name: Validate Inputs from Previous Job
        run: |
          if [ -z "${{ needs.delete_application_stack.outputs.project_identifier }}" ]; then
            echo "::error::Required output 'project_identifier' was not provided by the delete_application_stack job. Aborting."
            exit 1
          fi

      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          allowed-endpoints: >
            sts.amazonaws.com:443
            sts.ap-southeast-1.amazonaws.com:443
            sts.us-east-1.amazonaws.com:443
            cloudformation.ap-southeast-1.amazonaws.com:443
            cloudformation.us-east-1.amazonaws.com:443

      - name: Configure AWS Credentials for Target Account (using Management Connector)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.MANAGEMENT_CONNECTOR_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Delete Client IAM Role Stack
        run: |
          PROJECT_ID="${{ needs.delete_application_stack.outputs.project_identifier }}"
          STACK_NAME="${{ github.event.inputs.company_name }}-${{ github.event.inputs.environment_name }}-${PROJECT_ID}-client"
          echo "::add-mask::$PROJECT_ID"
          echo "::add-mask::$STACK_NAME"
          echo "Deleting client role stack..."
          aws cloudformation delete-stack --stack-name $STACK_NAME
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME

  delete_ssm_parameter:
    name: 3. Delete SSM Parameter Link
    runs-on: ubuntu-latest
    needs: delete_client_role_stack
    steps:
      - name: Mask Sensitive Inputs
        run: |
          echo "::add-mask::${{ github.event.inputs.company_name }}"
          echo "::add-mask::${{ github.event.inputs.environment_name }}"

      - name: Validate Inputs from Previous Job
        run: |
          # This job depends on the output of a job that might not have run if the first one failed.
          # We check the `project_identifier` again which originates from the very first job.
          if [ -z "${{ needs.delete_application_stack.outputs.project_identifier }}" ]; then
            echo "::error::Required output 'project_identifier' was not provided by the initial job. Aborting."
            exit 1
          fi

      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: block
          allowed-endpoints: >
            sts.amazonaws.com:443
            sts.ap-southeast-1.amazonaws.com:443
            sts.us-east-1.amazonaws.com:443
            ssm.ap-southeast-1.amazonaws.com:443
            ssm.us-east-1.amazonaws.com:443

      - name: Configure AWS Credentials for Tooling Account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TOOLING_ACCOUNT_OIDC_ROLE_ARN }}
          aws-region: ${{ github.event.inputs.aws_region }}

      - name: Delete SSM Parameter
        run: |
          PROJECT_ID="${{ needs.delete_application_stack.outputs.project_identifier }}"
          PARAMETER_NAME="/github/${{ github.event.inputs.company_name }}/${{ github.event.inputs.environment_name }}/${PROJECT_ID}/role-arn"
          echo "::add-mask::$PROJECT_ID"
          echo "::add-mask::$PARAMETER_NAME"
          echo "Deleting SSM Parameter..."
          aws ssm delete-parameter --name "$PARAMETER_NAME"
